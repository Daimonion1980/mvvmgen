// ***********************************************************************
// ⚡ MvvmGen => https://github.com/thomasclaudiushuber/mvvmgen
// Copyright © by Thomas Claudius Huber
// Licensed under the MIT license => See LICENSE file in repository root
// ***********************************************************************

using Xunit;

namespace MvvmGen.SourceGenerators
{
    public class CommandAttributeTests : ViewModelGeneratorTestsBase
    {
        [Fact]
        public void GenerateCommandProperty()
        {
            ShouldGenerateExpectedCode(
      @"using MvvmGen;

namespace MyCode
{
  [ViewModel]
  public partial class EmployeeViewModel
  {
    [Command]public void SaveAll() { }
  }
}",
      $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        private IDelegateCommand? _saveAllCommand;

        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public IDelegateCommand SaveAllCommand => _saveAllCommand ??= new DelegateCommand(_ => SaveAll());
    }}
}}
");
        }

        [InlineData("CanExecuteMethod=\"CanSaveAll\"")]
        [InlineData("CanExecuteMethod=nameof(CanSaveAll)")]
        [InlineData("nameof(CanSaveAll)")]
        [InlineData("\"CanSaveAll\"")]
        [Theory]
        public void GenerateCommandPropertyWithCanExecuteMethod(string attributeArgument)
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmGen;

namespace MyCode
{{
    [ViewModel]
    public partial class EmployeeViewModel
    {{
        [Command({attributeArgument})]
        public void SaveAll() {{ }}

        public bool CanSaveAll() => true;
    }}
}}",
      $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        private IDelegateCommand? _saveAllCommand;

        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public IDelegateCommand SaveAllCommand => _saveAllCommand ??= new DelegateCommand(_ => SaveAll(), _ => CanSaveAll());
    }}
}}
");
        }

        [InlineData("CanExecuteMethod=nameof(CanSaveAll)")]
        [InlineData("CanExecuteMethod=\"CanSaveAll\"")]
        [InlineData("nameof(CanSaveAll)")]
        [InlineData("\"CanSaveAll\"")]
        [Theory]
        public void GenerateCommandPropertyWithCanExecuteMethodAndCommandNameUsingNamedArgument(string canExecuteParameter)
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmGen;

namespace MyCode
{{
  [ViewModel]
  public partial class EmployeeViewModel
  {{
    [Command({canExecuteParameter}, PropertyName=""SuperCommand"")]
    public void SaveAll() {{ }}

    public bool CanSaveAll() => true;
  }}
}}",
      $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        private IDelegateCommand? _superCommand;

        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public IDelegateCommand SuperCommand => _superCommand ??= new DelegateCommand(_ => SaveAll(), _ => CanSaveAll());
    }}
}}
");
        }

        [InlineData("async x => await Save(x), _ => CanSave()", "async Task Save(object o)", "bool CanSave()")]
        [InlineData("async _ => await Save(), _ => CanSave()", "async Task Save()", "bool CanSave()")]
        [InlineData("_ => Save(), _ => CanSave()", "async void Save()", "bool CanSave()")]
        [InlineData("_ => Save(), _ => CanSave()", "void Save()", "bool CanSave()")]
        [InlineData("Save, _ => CanSave()", "void Save(object o)", "bool CanSave()")]
        [InlineData("Save, CanSave", "void Save(object o)", "bool CanSave(object o)")]
        [InlineData("_ => Save(), CanSave", "void Save()", "bool CanSave(object o)")]
        [Theory]
        public void GenerateCommandWithParametersOnMethods(string expectedConstructorArguments,
            string executeMethod, string canExecuteMethod)
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmGen;

namespace MyCode
{{
    [ViewModel]
    public partial class EmployeeViewModel
    {{
        [Command(CanExecuteMethod=nameof(CanSave))]
        public {executeMethod} {{ }}

        public {canExecuteMethod} => true;
    }}
}}",
      $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        private IDelegateCommand? _saveCommand;

        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public IDelegateCommand SaveCommand => _saveCommand ??= new DelegateCommand({expectedConstructorArguments});
    }}
}}
");
        }

        [Fact]
        public void GenerateCommandPropertyWithCustomCommandType()
        {
            ShouldGenerateExpectedCode(
      @"using MvvmGen;

namespace MyCode
{
  public class MyCommand : IDelegateCommand
  {
    private readonly Action<object?> _execute;
    private readonly Func<object?, bool>? _canExecute;

    public MyCommand(Action<object?> execute, Func<object?, bool>? canExecute = null)
    {
      _execute = execute ?? throw new ArgumentNullException(nameof(execute));
      _canExecute = canExecute;
    }

    public event EventHandler? CanExecuteChanged;

    public void RaiseCanExecuteChanged() => CanExecuteChanged?.Invoke(this, EventArgs.Empty);

    public void Execute(object? parameter) => _execute(parameter);

    public bool CanExecute(object? parameter) => _canExecute == null || _canExecute(parameter);
  }

  [ViewModel(CommandType=typeof(MyCommand))]
  public partial class EmployeeViewModel
  {
    [Command]
    public void SaveAll() { }
  }
}",
      $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        private IDelegateCommand? _saveAllCommand;

        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public IDelegateCommand SaveAllCommand => _saveAllCommand ??= new MyCode.MyCommand(_ => SaveAll());
    }}
}}
");
        }

    }
}
