// ***********************************************************************
// ⚡ MvvmGen => https://github.com/thomasclaudiushuber/mvvmgen
// Copyright © by Thomas Claudius Huber
// Licensed under the MIT license => See LICENSE file in repository root
// ***********************************************************************

using System;
using MvvmGen.Commands;
using Xunit;

namespace MvvmGen.SourceGenerators
{
    public partial class ViewModelAttributeTests : ViewModelGeneratorTestsBase
    {
        [InlineData("[MvvmGen.ViewModel]")]
        [InlineData("[ViewModel]")]
        [Theory]
        public void GenerateViewModel(string attribute)
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmGen;

namespace MyCode
{{
  {attribute}
  public partial class EmployeeViewModel
  {{
  }}
}}",
      $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelWithoutConstructor()
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmGen;

namespace MyCode
{{
  [ViewModel(GenerateConstructor=false)]
  public partial class EmployeeViewModel
  {{
  }}
}}",
      $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelWithoutConstructorNoEmptyLineForFirstMember()
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmGen;

namespace MyCode
{{
  [Inject(typeof(string),""InjectedString"")]
  [ViewModel(GenerateConstructor=false)]
  public partial class EmployeeViewModel
  {{
  }}
}}",
      $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        protected string InjectedString {{ get; private set; }}
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelBaseNotIfClassIndirectlyInheritsFromIt()
        {
            ShouldGenerateExpectedCode(
       @"using System.ComponentModel;
using MvvmGen;
using MvvmGen.ViewModels;

namespace MyCode
{
  public class CustomViewModelBase : global::MvvmGen.ViewModels.ViewModelBase
  {
    protected void OnPropertyChanged(string propertyName) { }
  }

  [ViewModel]
  public partial class EmployeeViewModel : CustomViewModelBase
  {
  }
}",
       $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelBaseNotIfClassIndirectlyInheritsFromItViewAnotherViewModelAttribute()
        {
            ShouldGenerateExpectedCode(
       @"using System.ComponentModel;
using MvvmGen;
using MvvmGen.ViewModels;

namespace MyCode
{
  [ViewModel]
  public class CustomViewModelBase
  {
  }

  [ViewModel]
  public partial class EmployeeViewModel : CustomViewModelBase
  {
  }
}",
         $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class CustomViewModelBase : global::MvvmGen.ViewModels.ViewModelBase
    {{
        public CustomViewModelBase()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
",
       $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelBaseNotIfClassIndirectlyInheritsFromItViewAnotherViewModelAttributeWithMoreLevels()
        {
            ShouldGenerateExpectedCode(
       $@"using System.ComponentModel;
using MvvmGen;
using MvvmGen.ViewModels;

namespace MyCode
{{
  [ViewModel]
  public class MoreCustomViewModelBase
  {{
  }}

  [ViewModel]
  public class CustomViewModelBase : MoreCustomViewModelBase
  {{
  }}

  [ViewModel]
  public partial class EmployeeViewModel : CustomViewModelBase
  {{
  }}
}}",
          $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class MoreCustomViewModelBase : global::MvvmGen.ViewModels.ViewModelBase
    {{
        public MoreCustomViewModelBase()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
", $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class CustomViewModelBase
    {{
        public CustomViewModelBase()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
",
       $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelBaseNotIfClassIndirectlyInheritsFromItViewAnotherViewModelAttributeWithMoreLevelsAndWithoutViewModelAttributeOnMiddleClass()
        {
            ShouldGenerateExpectedCode(
       $@"using System.ComponentModel;
using MvvmGen;
using MvvmGen.ViewModels;

namespace MyCode
{{
  [ViewModel]
  public class MoreCustomViewModelBase
  {{
  }}

  // [ViewModel]
  public class CustomViewModelBase : MoreCustomViewModelBase
  {{
  }}

  [ViewModel]
  public partial class EmployeeViewModel : CustomViewModelBase
  {{
  }}
}}",
          $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class MoreCustomViewModelBase : global::MvvmGen.ViewModels.ViewModelBase
    {{
        public MoreCustomViewModelBase()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
",
       $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

            [Fact]
            public void GenerateCommandPropertyWithCustomCommandType()
            {
                ShouldGenerateExpectedCode(
          @"using MvvmGen;
using MvvmGen.Commands;

namespace MyCode
{
  public class MyCommand : IDelegateCommand
  {
        private readonly Action<object?> _execute;
        private readonly Func<object?, bool>? _canExecute;

        public MyCommand(Action<object?> execute, Func<object?, bool>? canExecute)
        {
            _execute = execute ?? throw new ArgumentNullException(nameof(execute));
            _canExecute = canExecute;
        }

        public event EventHandler? CanExecuteChanged;
        public void RaiseCanExecuteChanged() => CanExecuteChanged?.Invoke(this, EventArgs.Empty);
        public void Execute(object? parameter) => _execute(parameter);
        public bool CanExecute(object? parameter) => _canExecute == null || _canExecute(parameter);
  }

  public class MyCommandFactory : IDelegateCommandFactory
  {
    public IDelegateCommand CreateCommand(Action<object?> execute, Func<bool,object?> canExecute)
    {
      return new MyCommand(execute, canExecute);
    }
  }

  [ViewModel(CommandFactoryType=typeof(MyCommandFactory))]
  public partial class EmployeeViewModel
  {
    [Command]public void SaveAll() { }
  }
}",
          $@"{AutoGeneratedTopContent}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmGen.ViewModels.ViewModelBase
    {{
        public EmployeeViewModel()
        {{
            this.InitializeCommands();
            this.OnInitialize();
        }}

        partial void OnInitialize();

        private void InitializeCommands()
        {{
            var commandFactory = new MyCode.MyCommandFactory();
            SaveAllCommand = commandFactory.CreateCommand(_ => SaveAll(), null);
        }}

        public IDelegateCommand SaveAllCommand {{ get; private set; }}
    }}
}}
");
            }
        }
}


